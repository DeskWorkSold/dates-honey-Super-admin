<Modal
          animationType="slide"
          transparent={false}
          visible={LocationModalVisible}
          onRequestClose={() => {
            setLocationModalVisible(!LocationModalVisible);
          }}
        >
          {actionTriggered === "ACTION_1" ? (
            <View style={{ alignItems: "center" }}>
              <View style={{ marginTop: 0 }}>
                <View
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                    justifyContent: "space-between",
                    paddingHorizontal: 20,
                    height: 50,
                  }}
                >
                  <TouchableOpacity
                    style={{
                      flex: 1,
                    }}
                    onPress={() => navigation.goBack()}
                  >
                    <Icon
                      name="arrow-back"
                      size={20}
                      onPress={() => setLocationModalVisible(false)}
                      color={Color.black}
                    />
                  </TouchableOpacity>
                  <View
                    style={{
                      flex: 2,
                    }}
                  >
                    <Text
                      style={{
                        color: Color.black,
                        fontSize: 20,
                        fontWeight: "bold",
                      }}
                    >
                      {" "}
                      Add Location{" "}
                    </Text>
                  </View>
                </View>
                <View
                  style={{
                    flex: 1,
                    // marginTop: 20
                  }}
                >
                  <GooglePlacesAutocomplete
                    placeholder="Type a place"
                    query={{
                      key: api,
                      // language: 'en',
                      // components: "country:pk",
                      types: "establishment",
                      radius: 30000,
                      location: `${region?.latitude}, ${region?.longitude}`,
                    }}
                    fetchDetails={true}
                    // ref={ref => setSearchTextRef(ref)}
                    // placeholder='Search'
                    // fetchDetails={true}
                    autoFocus={true}
                    // keyboardShouldPersistTaps={'handled'}
                    // listUnderlayColor={'transparent'}
                    // minLength={1} // minimum length of text to search
                    // returnKeyType={'search'}
                    // listViewDisplayed={'auto'}
                    GooglePlacesSearchQuery={{
                      rankby: "distance",
                    }}
                    // onFail={error => console.log(error)}
                    // onNotFound={() => console.log('no results')}
                    onPress={(data, details = null) => {
                      console.log("======>data", data, "====>details", details);
                      setRegion({
                        latitude: details.geometry.location.lat,
                        longitude: details.geometry.location.lng,
                      });
                      setLocation(data.description);
                    }}
                    // query={{
                    //     key: api,
                    //     language: 'en',
                    //     components: "country:pk",
                    //     types: "establishment",
                    //     radius: 30000,
                    //     location: `${region.latitude}, ${region.longitude}`
                    // }}
                    // nearbyPlacesAPI='GooglePlacesSearch'
                    styles={{
                      container: {
                        flex: 0,
                        position: "absolute",
                        width: "95%",
                        zIndex: 1,
                        marginTop: 20,
                        alignSelf: "center",
                        color: Color.gray,
                        // marginHorizontal: 20,
                        // marginTop: 10,
                      },
                      textInputContainer: {
                        backgroundColor: Color.transparent,
                      },
                      textInput: {
                        // height: 38,
                        color: "#5d5d5d",
                        fontSize: 16,
                      },
                      predefinedPlacesDescription: {
                        color: Color.black,
                      },
                      description: {
                        color: Color.black,
                      },
                    }}
                    // filterReverseGeocodingByTypes={['locality', 'administrative_area_level_3']}
                    // debounce={200}
                  />
                  <MapView
                    provider={PROVIDER_GOOGLE} // remove if not using Google Maps
                    style={styles.map}
                    initialRegion={{
                      latitude: region?.latitude,
                      longitude: region?.longitude,
                      latitudeDelta: 0.0922,
                      longitudeDelta: 0.0421,
                    }}
                  >
                    {/* {console.log(region, pin)} */}
                    <Marker
                      coordinate={{
                        latitude: 24.860966,
                        longitude: 66.990501,
                      }}
                      // image={require('../../../assets/map.png')}
                      draggable={false}
                      onDragEnd={(e) => {
                        console.log("Drag end", e.nativeEvent.coordinate);
                        setPin({
                          latitude: e.nativeEvent.coordinate.latitude,
                          longitude: e.nativeEvent.coordinate.longitude,
                        });
                      }}
                      title={"Test Marker"}
                      description={"This is description of marker"}
                    >
                      <Image
                        source={require("../../../assets/map.png")}
                        style={{ width: 26, height: 28 }}
                        resizeMode="contain"
                      />
                    </Marker>
                    <Circle center={pin} radius={200} />
                  </MapView>
                  <View
                    style={{
                      position: "absolute", //use absolute position to show button on top of the map
                      top: "70%", //for center align
                      alignSelf: "center", //for align to right
                    }}
                  >
                    <CustomeButton
                      title={"Add Location"}
                      onpress={() => OnSetLocation(pin)}
                    />
                  </View>
                </View>
              </View>
            </View>
          ) : actionTriggered === "ACTION_2" ? (
            <View
              style={{
                height: "100%",
                backgroundColor: Color.white,
              }}
            >
              <View
                style={{
                  flexDirection: "row",
                  alignItems: "center",
                  justifyContent: "space-between",
                  paddingHorizontal: 20,
                  height: 50,
                }}
              >
                <TouchableOpacity
                  style={{
                    flex: 1,
                  }}
                  onPress={() => navigation.goBack()}
                >
                  <Icon
                    name="arrow-back"
                    size={20}
                    onPress={() => setLocationModalVisible(false)}
                    color={Color.black}
                  />
                </TouchableOpacity>
                <View
                  style={{
                    flex: 2,
                  }}
                >
                  <Text
                    style={{
                      color: Color.black,
                      fontSize: 20,
                      fontWeight: "bold",
                    }}
                  >
                    {" "}
                    Ticket Details{" "}
                  </Text>
                </View>
              </View>
              <View
                style={{
                  marginHorizontal: 5,
                }}
              >
                <View
                  style={{
                    // height:height,
                    marginBottom: 20,
                    backgroundColor: Color.white,
                  }}
                >
                  <ScrollView vertical showsVerticalScrollIndicator={false}>
                    <View style={{ alignItems: "center" }}>
                      <Image
                        source={require("../../../assets/tickets.png")}
                        resizeMode="contain"
                        style={{
                          width: "70%",
                          height: 300,
                          borderWidth: 1,
                          borderRadius: 10,
                          borderColor: Color.light,
                          elevation: 8,
                        }}
                      />
                    </View>

                    <View style={{ alignItems: "center" }}>
                      <View style={{ marginTop: 10 }}>
                        <Text style={{ color: Color.black }}>
                          {" "}
                          Ticket Title{" "}
                        </Text>
                        <View
                          style={{
                            marginTop: 5,
                            borderRadius: 5,
                            height: 50,
                            backgroundColor: Color.white,
                            elevation: 5,
                            alignSelf: "center",
                            width: width / 1.1,
                          }}
                        >
                          <Picker
                            selectedValue={ticketTitle}
                            onValueChange={(itemValue, itemIndex) =>
                              setTicketTitle(itemValue)
                            }
                            style={{
                              color: Color.gray,
                              // height: 85,
                              marginTop: -2,
                            }}
                          >
                            <Picker.Item
                              label="Early Bird general admissions"
                              value="Early Bird general admissions"
                            />
                            <Picker.Item
                              label="Early Bird VIP"
                              value="Early Bird VIP"
                            />
                            <Picker.Item
                              label="Regular Admissions"
                              value="Regular Admissions"
                            />
                            <Picker.Item
                              label="VIP Admissions"
                              value="VIP Admissions"
                            />
                            <Picker.Item
                              label="Front row seats"
                              value="Front row seats"
                            />
                          </Picker>
                        </View>
                      </View>
                    </View>
                    <View style={{ alignItems: "center" }}>
                      <View style={{ marginTop: 10 }}>
                        <Text style={{ color: Color.black }}>
                          {" "}
                          Price Per Ticket{" "}
                        </Text>
                        <View style={styles.NumberInput}>
                          <TextInput
                            value={pricePerTicket}
                            placeholder={"Ticket price"}
                            placeholderTextColor={Color.gray}
                            onChangeText={(pricePerTicket) =>
                              setPricePerTicket(pricePerTicket)
                            }
                            selectionColor={Color.black}
                            underlineColor={Color.white}
                            activeUnderlineColor={Color.white}
                            style={styles.TextInput}
                          />
                        </View>
                      </View>
                    </View>
                    <View style={{ alignItems: "center" }}>
                      <View style={{ marginTop: 10 }}>
                        <Text style={{ color: Color.black }}>
                          {" "}
                          Total Tickets{" "}
                        </Text>
                        <View style={styles.NumberInput}>
                          <TextInput
                            value={totalTickets}
                            placeholder={"Tickets"}
                            placeholderTextColor={Color.gray}
                            onChangeText={(totalTickets) =>
                              setTotalTickets(totalTickets)
                            }
                            selectionColor={Color.black}
                            underlineColor={Color.white}
                            activeUnderlineColor={Color.white}
                            style={styles.TextInput}
                          />
                        </View>
                      </View>
                    </View>
                    <View style={{ alignItems: "center" }}>
                      <View style={{ marginTop: 10 }}>
                        <Text style={{ color: Color.black }}>
                          {" "}
                          Discount Per Tickets{" "}
                        </Text>
                        <View style={styles.NumberInput}>
                          <TextInput
                            value={discountPerTicket}
                            placeholder={"Discount percent"}
                            placeholderTextColor={Color.gray}
                            onChangeText={(discountPerTicket) =>
                              setDiscountPerTicket(discountPerTicket)
                            }
                            selectionColor={Color.black}
                            underlineColor={Color.white}
                            activeUnderlineColor={Color.white}
                            style={styles.TextInput}
                          />
                        </View>
                      </View>
                    </View>
                    <View
                      style={{
                        flexDirection: "row",
                        alignSelf: "center",
                        // backgroundColor:Color.main,
                        width: width / 1.1,
                      }}
                    >
                      <View style={{ marginTop: 10, width: "50%" }}>
                        <Text style={{ color: Color.black }}>
                          {" "}
                          Discount Start Date{" "}
                        </Text>
                        <View
                          style={{
                            height: 45,
                            backgroundColor: Color.white,
                            borderRadius: 5,
                            elevation: 4,
                            paddingRight: 10,
                            marginRight: 2,
                            flexDirection: "row",
                            justifyContent: "space-between",
                            alignItems: "center",
                          }}
                        >
                          <TextInput
                            style={styles.TextInput}
                            placeholder={"Start Date"}
                            value={discountStartDate}
                            placeholderTextColor={Color.gray}
                            // error={dateOfBirthError}
                            onChangeText={setDiscountStartDate}
                            selectionColor={Color.black}
                            underlineColor={Color.white}
                            // activeOutlineColor={Color.fontColor}
                            activeUnderlineColor={Color.white}
                            // onFocus={() => { setDateOfBirthError(false) }}
                            editable={true}
                            onPressIn={showDiscountStartDatePicker}
                          />
                          <Image
                            source={require("../../../assets/events.png")}
                            resizeMode="contain"
                            style={{
                              tintColor: Color.black,
                              width: 15,
                              height: 15,
                            }}
                          />
                        </View>
                      </View>
                      <View style={{ marginTop: 10, width: "50%" }}>
                        <Text style={{ color: Color.black }}>
                          Discount End Date{" "}
                        </Text>
                        <View
                          style={{
                            height: 45,
                            backgroundColor: Color.white,
                            borderRadius: 5,
                            elevation: 4,
                            paddingRight: 10,
                            marginLeft: 2,
                            flexDirection: "row",
                            justifyContent: "space-between",
                            alignItems: "center",
                          }}
                        >
                          <TextInput
                            style={styles.TextInput}
                            placeholder={"End Date"}
                            value={discountendDate}
                            placeholderTextColor={Color.gray}
                            // error={dateOfBirthError}
                            onChangeText={setDiscountEndDate}
                            selectionColor={Color.black}
                            underlineColor={Color.white}
                            // activeOutlineColor={Color.fontColor}
                            activeUnderlineColor={Color.white}
                            // onFocus={() => { setDateOfBirthError(false) }}
                            editable={true}
                            onPressIn={showDiscountEndDatePicker}
                          />
                          <Image
                            source={require("../../../assets/events.png")}
                            resizeMode="contain"
                            style={{
                              tintColor: Color.black,
                              width: 15,
                              height: 15,
                            }}
                          />
                        </View>
                      </View>
                    </View>
                    <View
                      style={{
                        flexDirection: "row",
                        alignSelf: "center",
                        // backgroundColor:Color.main,
                        width: width / 1.1,
                      }}
                    >
                      <View style={{ marginTop: 10, width: "50%" }}>
                        <Text style={{ color: Color.black }}>
                          Discount Start Time{" "}
                        </Text>
                        <View
                          style={{
                            height: 45,
                            backgroundColor: Color.white,
                            borderRadius: 5,
                            elevation: 4,
                            paddingRight: 10,
                            marginRight: 2,
                            flexDirection: "row",
                            justifyContent: "space-between",
                            alignItems: "center",
                          }}
                        >
                          <TextInput
                            style={styles.TextInput}
                            placeholder={"Start Time"}
                            value={discountstartTime}
                            placeholderTextColor={Color.gray}
                            error={dateOfBirthError}
                            onChangeText={setDiscountStartTime}
                            selectionColor={Color.black}
                            underlineColor={Color.white}
                            activeUnderlineColor={Color.white}
                            // onFocus={() => { setDateOfBirthError(false) }}
                            // editable={true}
                            onPressIn={showDiscountStartTimePicker}
                          />
                          <Image
                            source={require("../../../assets/clock.png")}
                            resizeMode="contain"
                            style={{
                              width: 15,
                              height: 15,
                              tintColor: Color.black,
                            }}
                          />
                        </View>
                      </View>
                      <View style={{ marginTop: 10, width: "50%" }}>
                        <Text style={{ color: Color.black }}>
                          Discount End Time{" "}
                        </Text>
                        <View
                          style={{
                            height: 45,
                            backgroundColor: Color.white,
                            borderRadius: 5,
                            elevation: 4,
                            paddingRight: 10,
                            marginLeft: 2,
                            flexDirection: "row",
                            justifyContent: "space-between",
                            alignItems: "center",
                          }}
                        >
                          <TextInput
                            style={styles.TextInput}
                            placeholder={"End Time"}
                            value={discountendTime}
                            // error={dateOfBirthError}
                            onChangeText={setDiscountEndTime}
                            placeholderTextColor={Color.gray}
                            selectionColor={Color.black}
                            underlineColor={Color.white}
                            // activeOutlineColor={Color.fontColor}
                            activeUnderlineColor={Color.white}
                            // onFocus={() => { setDateOfBirthError(false) }}
                            onPressIn={showDiscountEndTimePicker}
                          />
                          <Image
                            source={require("../../../assets/clock.png")}
                            resizeMode="contain"
                            style={{
                              tintColor: Color.black,
                              width: 15,
                              height: 15,
                            }}
                          />
                        </View>
                      </View>
                    </View>
                    <View
                      style={{
                        alignItems: "center",
                        marginTop: 50,
                        marginBottom: 100,
                      }}
                    >
                      {!uploading == true ? (
                        <CustomeButton
                          onpress={() => OnAddTicket()}
                          title={"Add Ticket"}
                          color={Color.white}
                        />
                      ) : (
                        <View
                          style={{
                            backgroundColor: Color.main,
                            width: "90%",
                            height: 50,
                            borderRadius: 10,
                            alignItems: "center",
                            justifyContent: "center",
                          }}
                        >
                          <ActivityIndicator
                            size="small"
                            color={Color.white}
                            animating={uploading}
                          />
                        </View>
                      )}
                    </View>
                  </ScrollView>
                </View>
              </View>
            </View>
          ) : actionTriggered === "ACTION_3" ? (
            <View style={styles.modalContainer}>
              <View style={{ marginTop: 10 }}>
                <Text
                  style={{
                    color: Color.black,
                    paddingHorizontal: 20,
                    fontSize: 20,
                    fontWeight: "bold",
                    marginBottom: 10,
                  }}
                >
                  {" "}
                  Edit Tickets{" "}
                </Text>
                <View
                  style={{
                    marginVertical: 5,
                  }}
                >
                  <Text
                    style={{
                      paddingHorizontal: 20,
                    }}
                  >
                    Ticket Title
                  </Text>
                  <View
                    style={{
                      marginTop: 5,
                      borderRadius: 5,
                      height: 50,
                      marginHorizontal: 20,
                      backgroundColor: Color.white,
                      elevation: 5,
                    }}
                  >
                    <Picker
                      selectedValue={editeTitle}
                      onValueChange={(itemValue, itemIndex) =>
                        setEditeTitle(itemValue)
                      }
                      style={{
                        color: Color.gray,
                        // height: 85,
                        marginTop: -2,
                      }}
                    >
                      <Picker.Item
                        label="Early Bird general admissions"
                        value="Early Bird general admissions"
                      />
                      <Picker.Item
                        label="Early Bird VIP"
                        value="Early Bird VIP"
                      />
                      <Picker.Item
                        label="Regular Admissions"
                        value="Regular Admissions"
                      />
                      <Picker.Item
                        label="VIP Admissions"
                        value="VIP Admissions"
                      />
                      <Picker.Item
                        label="Front row seats"
                        value="Front row seats"
                      />
                    </Picker>
                  </View>
                </View>
                <View
                  style={{
                    marginVertical: 5,
                  }}
                >
                  <Text
                    style={{
                      paddingHorizontal: 20,
                    }}
                  >
                    Price Per Tickets
                  </Text>
                  <View
                    style={[
                      styles.NumberInput,
                      {
                        width: "90%",
                        alignSelf: "center",
                      },
                    ]}
                  >
                    <TextInput
                      value={editePrice}
                      placeholder={"Price"}
                      placeholderTextColor={Color.gray}
                      onChangeText={(editePrice) => setEditePrice(editePrice)}
                      selectionColor={Color.black}
                      underlineColor={Color.transparent}
                      activeUnderlineColor={Color.white}
                      style={styles.TextInput}
                    />
                  </View>
                </View>
                <View
                  style={{
                    marginVertical: 5,
                  }}
                >
                  <Text
                    style={{
                      paddingHorizontal: 20,
                    }}
                  >
                    Total Tickets
                  </Text>
                  <View
                    style={[
                      styles.NumberInput,
                      {
                        width: "90%",
                        alignSelf: "center",
                      },
                    ]}
                  >
                    <TextInput
                      value={editeTotalTickets}
                      placeholder={"Tickets"}
                      placeholderTextColor={Color.gray}
                      onChangeText={(editeTotalTickets) =>
                        setEditeTotalTickets(editeTotalTickets)
                      }
                      selectionColor={Color.black}
                      underlineColor={Color.transparent}
                      activeUnderlineColor={Color.white}
                      style={styles.TextInput}
                    />
                  </View>
                </View>
                <View
                  style={{
                    marginVertical: 5,
                  }}
                >
                  <Text
                    style={{
                      paddingHorizontal: 20,
                    }}
                  >
                    Discount Per Tickets
                  </Text>
                  <View
                    style={[
                      styles.NumberInput,
                      {
                        width: "90%",
                        alignSelf: "center",
                      },
                    ]}
                  >
                    <TextInput
                      value={editeDiscountTickets}
                      placeholder={"Discount"}
                      placeholderTextColor={Color.gray}
                      onChangeText={(editeDiscountTickets) =>
                        setEditeDiscountTickets(editeDiscountTickets)
                      }
                      selectionColor={Color.black}
                      underlineColor={Color.transparent}
                      activeUnderlineColor={Color.white}
                      style={styles.TextInput}
                    />
                  </View>
                </View>
                <View
                  style={{
                    flexDirection: "row",
                    alignSelf: "center",
                    // backgroundColor:Color.main,
                    width: width / 1.1,
                  }}
                >
                  <View style={{ marginTop: 10, width: "50%" }}>
                    <Text style={{ color: Color.gray }}>
                      {" "}
                      Discount Start Date{" "}
                    </Text>
                    <View
                      style={{
                        height: 45,
                        backgroundColor: Color.white,
                        borderRadius: 5,
                        elevation: 4,
                        paddingRight: 10,
                        marginRight: 2,
                        flexDirection: "row",
                        justifyContent: "space-between",
                        alignItems: "center",
                      }}
                    >
                      <TextInput
                        style={styles.TextInput}
                        placeholder={"Start Date"}
                        value={editeDiscountStartDate}
                        placeholderTextColor={Color.gray}
                        // error={dateOfBirthError}
                        onChangeText={setEditeDiscountStartDate}
                        selectionColor={Color.black}
                        underlineColor={Color.white}
                        // activeOutlineColor={Color.fontColor}
                        activeUnderlineColor={Color.white}
                        // onFocus={() => { setDateOfBirthError(false) }}
                        editable={true}
                        onPressIn={showEditStartDate}
                      />
                      <Image
                        source={require("../../../assets/events.png")}
                        resizeMode="contain"
                        style={{
                          tintColor: Color.black,
                          width: 15,
                          height: 15,
                        }}
                      />
                    </View>
                  </View>
                  <View style={{ marginTop: 10, width: "50%" }}>
                    <Text style={{ color: Color.gray }}>
                      Discount End Date{" "}
                    </Text>
                    <View
                      style={{
                        height: 45,
                        backgroundColor: Color.white,
                        borderRadius: 5,
                        elevation: 4,
                        paddingRight: 10,
                        marginLeft: 2,
                        flexDirection: "row",
                        justifyContent: "space-between",
                        alignItems: "center",
                      }}
                    >
                      <TextInput
                        style={styles.TextInput}
                        placeholder={"End Date"}
                        value={editeDiscountEndDate}
                        placeholderTextColor={Color.gray}
                        // error={dateOfBirthError}
                        onChangeText={setEditeDiscountEndDate}
                        selectionColor={Color.black}
                        underlineColor={Color.white}
                        // activeOutlineColor={Color.fontColor}
                        activeUnderlineColor={Color.white}
                        // onFocus={() => { setDateOfBirthError(false) }}
                        editable={true}
                        onPressIn={showEditEndDate}
                      />
                      <Image
                        source={require("../../../assets/events.png")}
                        resizeMode="contain"
                        style={{
                          tintColor: Color.black,
                          width: 15,
                          height: 15,
                        }}
                      />
                    </View>
                  </View>
                </View>

                <View
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                    marginHorizontal: 20,
                    width: "100%",
                  }}
                >
                  <View style={{ marginTop: 10, width: "45%" }}>
                    <Text style={{ color: Color.gray }}>
                      {" "}
                      Discount Start Time{" "}
                    </Text>
                    <View
                      style={{
                        height: 45,
                        backgroundColor: Color.white,
                        borderRadius: 5,
                        elevation: 4,
                        paddingRight: 10,
                        marginRight: 2,
                        flexDirection: "row",
                        justifyContent: "space-between",
                        alignItems: "center",
                      }}
                    >
                      <TextInput
                        style={styles.TextInput}
                        placeholder={"Start Time"}
                        value={editeDiscountStartTime}
                        placeholderTextColor={Color.gray}
                        // error={dateOfBirthError}
                        onChangeText={setEditeDiscountStartTime}
                        selectionColor={Color.black}
                        underlineColor={Color.white}
                        // activeOutlineColor={Color.fontColor}
                        activeUnderlineColor={Color.white}
                        // onFocus={() => { setDateOfBirthError(false) }}
                        editable={true}
                        onPressIn={showEditStartTime}
                      />
                      <Image
                        source={require("../../../assets/events.png")}
                        resizeMode="contain"
                        style={{
                          tintColor: Color.black,
                          width: 15,
                          height: 15,
                        }}
                      />
                    </View>
                  </View>
                  <View style={{ marginTop: 10, width: "45%" }}>
                    <Text style={{ color: Color.gray }}>
                      Discount End Time{" "}
                    </Text>
                    <View
                      style={{
                        height: 45,
                        backgroundColor: Color.white,
                        borderRadius: 5,
                        elevation: 4,
                        paddingRight: 10,
                        marginLeft: 2,
                        flexDirection: "row",
                        justifyContent: "space-between",
                        alignItems: "center",
                      }}
                    >
                      <TextInput
                        style={styles.TextInput}
                        placeholder={"End Time"}
                        value={editeDiscountEndTime}
                        placeholderTextColor={Color.gray}
                        // error={dateOfBirthError}
                        onChangeText={setEditeDiscountEndTime}
                        selectionColor={Color.black}
                        underlineColor={Color.white}
                        // activeOutlineColor={Color.fontColor}
                        activeUnderlineColor={Color.white}
                        // onFocus={() => { setDateOfBirthError(false) }}
                        editable={true}
                        onPressIn={showEditEndTimePicker}
                      />
                      <Image
                        source={require("../../../assets/events.png")}
                        resizeMode="contain"
                        style={{
                          tintColor: Color.black,
                          width: 15,
                          height: 15,
                        }}
                      />
                    </View>
                  </View>
                </View>
                <View style={{ flexDirection: "row-reverse", margin: 10 }}>
                  <TouchableOpacity
                    style={{ ...styles.actions, backgroundColor: Color.light }}
                    onPress={() => {
                      setLocationModalVisible(false);
                    }}
                  >
                    <Text
                      style={[
                        styles.actionText,
                        {
                          color: Color.black,
                        },
                      ]}
                    >
                      No
                    </Text>
                  </TouchableOpacity>
                  <TouchableOpacity
                    onPress={() => UpdatediteTicket()}
                    style={{ ...styles.actions, backgroundColor: Color.main }}
                  >
                    <Text style={styles.actionText}>Yes</Text>
                  </TouchableOpacity>
                </View>
              </View>
            </View>
          ) : actionTriggered == "ACTION_4" ? (
            <View
              style={[
                styles.modalContainer,
                {
                  // width:0,
                  // height:0,
                },
              ]}
            >
              <View style={styles.modalHeader}>
                <Text style={styles.title}>Delete Your Event</Text>
                <View style={styles.divider}></View>
              </View>
              <View style={styles.modalBody}>
                <Text style={styles.bodyText}>
                  Are you sure you want to delete your event ?
                </Text>
              </View>
              <View style={styles.modalFooter}>
                <View style={styles.divider}></View>
                <View style={{ flexDirection: "row-reverse", margin: 10 }}>
                  <TouchableOpacity
                    style={{ ...styles.actions, backgroundColor: "#db2828" }}
                    onPress={() => {
                      setModalVisible(!modalVisible);
                    }}
                  >
                    <Text style={styles.actionText}>No</Text>
                  </TouchableOpacity>
                  <TouchableOpacity
                    style={{ ...styles.actions, backgroundColor: "#21ba45" }}
                  >
                    <Text style={styles.actionText}>Yes</Text>
                  </TouchableOpacity>
                </View>
              </View>
            </View>
          ) : null}
        </Modal>